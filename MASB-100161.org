#+TITLE: Configuration Specific To Mesiniaga's Lenovo Thinkpad E420
#+STARTUP: indent hidestars
#+OPTIONS: toc:nil num:nil ^:nil
#+PROPERTY: header-args :results silent

So this is basically the configuration file for MASB-100161, my work laptop.

It's getting on with age, it has a whole bunch of weird Windows hacks to make it work properly, and I don't ultimately own it.

* Before we begin
Anyway, as with all hostname-specific machines, this little fella runs the following code to load the common features I expect from all my emacs instances:

#+begin_src emacs-lisp
(org-babel-load-file (expand-file-name "tariqk-common.org" starter-kit-dir))
#+end_src

* Download some pre-requisites
Now, the common-files should have done the following:

- Loaded the compulsory modules that are common to all machines
- Populated the =package-pinned-packages= variables.

But that's for what's common in all machines. These are the packages that need to be installed on friend desktop:

#+NAME: package-settings :colnames yes
| name       | repository |
|------------+------------|
| everything | marmalade  |
| ssh-agency | MELPA      |

#+begin_src emacs-lisp :var name=package-settings[,0] repository=package-settings[,1]
  (when (require 'package nil 'noerror)
    (when (require 'cl nil 'noerror)
      (lexical-let ((pkgs (mapcar #'intern name))
                    (original))
        (setq original package-pinned-packages)
        (setq package-pinned-packages (append original (pairlis pkgs repository)))
        (apply 'starter-kit-install-if-needed pkgs))
        (package-initialize)))
#+end_src  

* What goes in here
Settings for emacs specific to a laptop , running Windows 7, Enterprise Edition.

* The Settings themselves
Actual settings go here.

The goals of these settings is to:
- Minimize eye strain.
- Work seamlessly with Windows, or as well as it can anyway.
- Be modular, so that I can take this out quickly in the event the system needs to be returned or reformatted.

** Custom faces
There is obviously no DejaVu Mono Sans installed in Windows by default, so we use Windows 7's default font, Consolas, which is decent.

#+begin_src emacs-lisp
(custom-set-faces
'(default ((t (:foundry "outline" :family "Consolas" :height 100)))))
#+end_src

** Custom variables
Instead of using the =customize= option to fix stuff (which saves it in =customize.el= and doesn't get propagated to the github repo, I save them here.

*** Quirks-fixing
Of course, there are a whole bunch of little quirks that emacs for w32 has. When I find one, I fix it here.

#+BEGIN_SRC emacs-lisp :noweb yes
(custom-set-variables
<<quirks-custom-variables-flyspell>>
<<quirks-custom-variables-everything>>
)
#+END_SRC

**** Fixing =flyspell= on Windows.
=flyspell= don't work normally with this variant of emacs, so we need to install it into the system and get Windows to link it here.

#+NAME: quirks-custom-variables-flyspell
#+BEGIN_SRC emacs-lisp
   '(ispell-dictionary "british")
   '(ispell-program-name "C:\\Program Files \(x86\)\\Aspell\\bin\\aspell.exe")
#+END_SRC
**** Fixing the default directory for =find-file=
So it turns out that the default directory for =find-file= is somewhere in the emacs application directory. How annoying! Let's fix that.

#+BEGIN_SRC emacs-lisp
  (setq default-directory "~")
#+END_SRC
**** Pointing =everything= to the right executable
The original =es.exe= file location is hard-coded, and /egregiously/ wrong in this current setup. Here's where it should be:

#+NAME: quirks-custom-variables-everything
#+begin_src emacs-lisp
  '(everything-cmd "C:\\Program Files \(x86\)\\Everything\\es.exe")
#+end_src
**** Allowing =magit= to work properly
So, based on [[http://emacs.stackexchange.com/questions/177/magit-on-windows-searching-for-program-permission-denied-git][this solution]], we need to locate =git= manually for =magit= to work. Therefore:

#+begin_src emacs-lisp
  (add-to-list 'exec-path "C:/Program Files/Git/bin")
#+end_src

And, as a first step to solve the whole =git= failing in general to push, from [[https://github.com/magit/magit/wiki/Pushing-with-Magit-from-Windows][here]]:
#+begin_src emacs-lisp
  (setenv "SSH_ASKPASS" "git-gui--askpass")
#+end_src

Additional note: no, it didn't work, so I'm using [[https://help.github.com/articles/generating-ssh-keys/][this solution]]. Step 3 doesn't work, so I ended up using =eval $(ssh-agent)= instead and that works, based on [[http://stackoverflow.com/a/21909432][this answer]].
** Window Setup The Way I Like It (Here)
Basically, let's keep it transparent, and let's put in a color scheme. We'll do the color scheme after everything is sorted out.

And once that's all done, just maximize the window, w32-style. And maybe load dired?

#+begin_src emacs-lisp
  (*hx-transparent 80 80)
  (when (require 'color-theme nil 'noerror)
      (eval-after-load "color-theme"
        '(progn
           (color-theme-initialize)
           (color-theme-dark-laptop))))
  (dired "~/Dropbox (STI)/Projects")
  (toggle-frame-maximized)
#+end_src
