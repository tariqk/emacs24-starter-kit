#+TITLE: Configuration Specific To Tariq's HP Pavilion Desktop.
#+STARTUP: indent hidestars
#+OPTIONS: toc:nil num:nil ^:nil

So this is basically the configuration file for friend, the HP Pavilion Desktop running Crunchbang Waldorf. Dual-screen monitor setup.

* Before we begin
Anyway, as with all hostname-specific machines, this little fella runs the following code to load the common features I expect from all my emacs instances:

#+begin_src emacs-lisp
(org-babel-load-file (expand-file-name "tariqk-common.org" starter-kit-dir))
#+end_src

* What goes in here
Settings for emacs specific to HP Pavilion Desktop, running CrunchBang Waldorf, with the OpenBox Window Manager. This configuration assumes a display area of 1600 Ã— 900, 500 GB HDD, 250 GB SDD, 4 GB RAM, and a (presumably, I can't tell) x64 Intel Core Duo i3 Processor.

* The Settings themselves
Actual settings go here.

The goals of these settings is to:
- Maximize screen real estate.
- Minimize eye strain.

** Custom faces

#+begin_src emacs-lisp
(custom-set-faces
'(default ((t (:foundry "unknown" :family "Liberation Mono" :height 100)))))
#+end_src

** Window Setup The Way I Like It (Here)
Basically, let's keep it transparent, and let's put in a color scheme.

#+begin_src emacs-lisp
  (when (require 'color-theme nil 'noerror)
    (progn
      (color-theme-solarized-dark)
      (transparent 85 85)
      (toggle-frame-maximized)))
#+end_src

#+RESULTS:

** Stuff for development
Since I'm using this computer to develop projects, here are some language-specific settings for specific packages.

*** Python
Code for Python. This basically enables =elpy-mode= and includes the elpy repository.

#+begin_src emacs-lisp
  (when (require 'package nil 'noerror)
    (progn
      (add-to-list 'package-archives
                   '("elpy" . "http://jorgenschaefer.github.io/packages/"))
      (package-initialize)
      (elpy-enable)))
#+end_src

**** Including =form-feed-mode= for =elpy-mode=

And now, since ^L is allowed thanks to PEP-8, including form-feed mode to the Python-developing mode I most frequent:

#+begin_src emacs-lisp
  (when (require 'form-feed nil 'noerror)
    (add-hook 'python-mode-hook #'form-feed-mode))
#+end_src

**** =pygame=-specific settings.

Right now it's just settings for putting in documentation for the latest version of =pygame= (from the website).

#+begin_src emacs-lisp
  (when (require 'pydoc-info nil 'noerror)
    (info-lookup-add-help :mode 'python-mode :parse-rule 'pydoc-info-puthon-symbol-at-point
                          :doc-spec '(("(python)Index" pydoc-info-lookup-transform-entry)
                                      ("(pygame)Index" pydoc-info-lookup-transform-entry))))
#+end_src

In any case, for posterity's sake, here's how I got it installed.

#+begin_src sh :tangle no
  #!/bin/bash

  cd /tmp  # do the installation in the tmp directory.
  mkdir pygame-dev-docs
  virtualenv pygame-dev-docs/ # create the python virtual environment
  cd pygame-dev-docs/

  # activate the virtual environment; now nothing touches the main system
  . bin/activate 

  # install latest sphinx dev version...
  pip install https://bitbucket.org/jonwaltman/sphinx-info/get/51850bb9b7a1.zip

  # download and unzip latest pygame release (as of 2015-02-19).
  wget https://bitbucket.org/pygame/pygame/get/db5966ca2b4d.zip
  unzip db5966ca2b4d.zip

  # Move to the reST source documents, and prepare the conf.py file
  cd pygame-pygame-db5966ca2b4d/docs/reST/
  cat >> conf.py

  texinfo_documents = [
      ('index', 'pygame', u'Pygame Documentation', u'Pygame Developers',
       'Pygame', u'The Pygame Documentation', u'Software Development')
  ]
    
  # Generate the Texinfo file, build the Info file and install it
  mkdir -p build/texinfo build/doctrees
  sphinx-build -b texinfo -d build/doctrees . build/texinfo
  cd build/texinfo
  makeinfo --no-split pygame.texi
  sudo cp pygame.info /usr/share/info
  sudo ginstall-info --info-dir=/usr/share/info pygame.info # install-info is now ginstall-info
  info pygame # test it out

  # Cleanup

  deactivate
  cd ~
  rm -rf /tmp/pygame-dev-docs
#+end_src

* TODO Other things to do.
- [X] Test this out and see if it's working.
  + [X] Remove annoyances (menu-bar, light color-scheme).
  + [X] Install the color theme file and set it up here.
- [X] Put together an org-mode framework.
- Setup:
  + [ ] Git?
  + [ ] Common Lisp?
  + [ ] Python
    * [ ] el-py
    * [ ] pydoc?
